{% block content %}
<div class="flex flex-col gap-6 mt-6">
  <form id="chat-form"
      class="flex items-center shadow-sm rounded-lg overflow-hidden border border-gray-200" autocomplete="off"
      hx-post="/api/chat"
      hx-trigger="submit"
      hx-ext="json-enc"
      hx-headers='{"Content-Type": "application/json"}'
      hx-target="#chat-response"
      hx-swap="beforeend"
      onsubmit="return addUserBubble(event)">
    <input
      type="text"
      name="prompt"
      id="chat-input"
      class="flex-1 py-3 px-5 text-gray-700 focus:outline-none focus:ring-1 focus:ring-blue-500"
      placeholder="Type your message..."
      required
    >
    <button
      type="submit"
      class="bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 transition-colors duration-200 flex items-center justify-center"
      aria-label="Send"
    >
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
        <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5L21 12m0 0L10.5 4.5m10.5 7.5H3" />
      </svg>
    </button>
  </form>
  <div id="prompts-section" class="mt-8">
    <h3 class="text-lg font-semibold mb-2">Prompts</h3>
    <div id="prompts-list" class="flex flex-wrap gap-2"
         hx-post="/api/resources/ui"
         hx-vals='{"uri": "ui://app/prompts"}'
         hx-headers='{"Content-Type": "application/json"}'
         hx-ext="json-enc"
         hx-trigger="load"
         hx-target="#prompts-list"
         hx-swap="innerHTML">
      <p>Loading Prompts...</p>
    </div>
    <!-- Modal for prompt form -->
    <div id="prompt-form-modal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 hidden">
      <div class="bg-white rounded-lg shadow-lg p-6 max-w-lg w-full relative">
        <button id="close-prompt-form" class="absolute top-2 right-2 text-gray-400 hover:text-gray-700">&times;</button>
        <div id="prompt-form-content"></div>
      </div>
    </div>
  </div>
  <div id="chat-response" class="min-h-[3rem] p-4 bg-gray-50 rounded-lg text-gray-800 shadow-sm border border-gray-100 flex flex-col gap-2">
    <!-- Chat response will be swapped in here by HTMX -->
    {% if chat_input %}
      <div data-rendered-prompt style="display:none;">{{ chat_input }}</div>
    {% endif %}
  </div>
</div>
<script>
  // Show modal when prompt form content is loaded
  document.body.addEventListener('htmx:afterSwap', function(evt) {
    if (evt.detail.target && evt.detail.target.id === "prompt-form-content") {
      document.getElementById("prompt-form-modal").classList.remove("hidden");
    }
    // Close modal if the form was just submitted and response is swapped into #chat-input (handled by hx-on inline, but fallback here for completeness)
    if (evt.detail.target && evt.detail.target.id === "chat-input") {
      document.getElementById("prompt-form-modal").classList.add("hidden");
    }
  });

  // Hide modal when close button is clicked
  document.addEventListener('click', function(evt) {
    if (evt.target && evt.target.id === "close-prompt-form") {
      document.getElementById("prompt-form-modal").classList.add("hidden");
    }
  });
</script>
<script>
  function addUserBubble(e) {
    const input = document.getElementById("chat-input");
    const chatResp = document.getElementById("chat-response");
    const val = input.value.trim();
    if (!val) return false; // prevent blank messages
    // Create the user bubble
    const div = document.createElement("div");
    div.className = "chat-bubble chat-bubble-user text-right self-end bg-blue-500 text-white";
    div.innerText = val;
    chatResp.appendChild(div);
    // Let HTMX submit (return true)
    return true;
  }
</script>
{% endblock %}
